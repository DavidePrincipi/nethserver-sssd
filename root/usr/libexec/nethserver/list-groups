#!/usr/bin/perl

#
# Copyright (C) 2016 Nethesis S.r.l.
# http://www.nethesis.it - nethserver@nethesis.it
#
# This script is part of NethServer.
#
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
#
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see COPYING.
#

use strict;
use NethServer::SSSD;
use NethServer::AccountsList;
use NethServer::LdapClient;
use Sys::Hostname;
use Net::LDAP;
use Getopt::Std;
use JSON;

our ($opt_A, $opt_s, $opt_t);

#
# Invocation flags:
#    -A      list all groups returned by LDAP server. If not specified items listed in /etc/nethserver/system-groups are hidden
#    -s      strip the @domain suffix from users and groups
#    -t N    timeout for each network call (default 10 seconds)
#
# If an argument is added, limit the list to the given entry only, i.e.
#
#    list-groups -s administrators
#
getopts('Ast:');

my $al = NethServer::AccountsList->new();
my ($systemName, $domainName) = split(/\./, Sys::Hostname::hostname(), 2);
my $sssd = NethServer::SSSD->new();
my $thisEntry = shift; $thisEntry =~ s/\@$domainName$//;

if( ! $opt_t) {
    $opt_t = 10;
}

my %config = ();

if($sssd->isLdap()) {
    %config = ( %config,
        'keyattr' => 'cn',
        'filter' => '(objectClass=posixGroup)',
    );

} elsif($sssd->isAD()) {
    %config = ( %config,
        'keyattr' => 'sAMAccountName',
        'filter' => '(objectClass=group)',
    );
} else {
    exit(0);
}

my $result;

my $ldap = NethServer::LdapClient::connect($sssd, 'timeout' => $opt_t);

if( ! $ldap) {
    die("$!: $@\n");
}

my $separator = '';
print '{';

$result = NethServer::LdapClient::paged_search($sssd, $ldap,
    'base' => $sssd->groupDN(),
    'scope' => 'subtree',
    'deref' => 'never',
    'timelimit' => $opt_t,
    'filter' => $thisEntry ? "(&$config{'filter'}($config{'keyattr'}=$thisEntry))" : $config{'filter'},
    'callback' => \&_cb_group_print
);

print '}';


sub _cb_group_print
{
    my $message = shift;
    my $entry = shift;

    my $key = lc($entry->get_value($config{'keyattr'}));
    if( ! $opt_A && (($sssd->isAD() && $al->is_system_group($entry->get_value('objectSid')))
        || $al->is_system_group($key))) {
        return;
    }

    print $separator;
    print JSON->new()->allow_nonref()->encode($key . ($opt_s ? "" : "\@$domainName"));
    print ':{"members":[]}';
    $separator = ',';

}

$ldap->unbind();
$ldap->disconnect();

