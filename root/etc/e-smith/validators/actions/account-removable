#!/usr/bin/perl -w
#
# Copyright (C) 2012 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#
use strict;
use esmith::ConfigDB;

=head2 account-removable

Exit code 4, if account is not removable

0 on SUCCESS

=cut

my $acctName = shift || die("Missing account name argument");
my $db = esmith::ConfigDB->open_ro() or die("Could not open ConfigDB");

my $domain = $db->get_value('DomainName');
if ($acctName !~ $domain) {
    $acctName = $acctName.'@'.$domain;
}

my ($name, $passwd, $uid, $gid, $quota, $comment, $gcos, $dir, $shell) = getpwnam($acctName);
($name, $passwd, $gid, my $members) = getgrnam($acctName);
if (!defined($uid) && !defined($gid)) {
    printf "User account `%s` does not exist\n", $acctName;
    exit 4;
}
if ( (defined($uid) && $uid < 1000) || (defined($gid) && $gid < 1000)) {
    printf "Account `%s` is not removable\n", $acctName;
    exit 4;
}

exit 0;

