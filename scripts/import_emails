#!/usr/bin/perl

#
# Copyright (C) 2014 Nethesis S.r.l.
# http://www.nethesis.it - support@nethesis.it
# 
# This script is part of NethServer.
# 
# NethServer is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License,
# or any later version.
# 
# NethServer is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with NethServer.  If not, see <http://www.gnu.org/licenses/>.
#

use strict;

use esmith::AccountsDB;
use esmith::event;
use File::Temp qw(tempfile);

my $file = shift;
my $separator = shift;
my $accountsDb = esmith::AccountsDB->open() || die("Could not open accounts DB");
my $pseudonym = '';

if($file) {
    open(FH, "<", $file) or die;
} else {
    open(FH, "-");
}

if( ! $separator) {
    $separator = "\t";
}

while(<FH>) {
    
    # Remove trailing whitespace:
    chomp $_;
    $_ =~ s/\s+$//;

    my ($username, $email) = split(/$separator/, $_);

    if( ! $username) {
        next;
    }

    if( ! getpwnam($username)) {
        warn "[WARNING] Account `$username` does not exist, skipped.\n";
        next;
    }


    $pseudonym = $email;
    if($email !~ /@/) {
        $pseudonym .= '@';
    }
    
    if($accountsDb->get($pseudonym)) {
        warn "[WARNING] Email `$pseudonym` already exists, skipped.\n";
        next;
    } 
    
    
    if( ! $accountsDb->new_record($pseudonym, {
        'type'=>'pseudonym', 
        'Account'=>$username,
        'Access'=>'public',
        'Description'=>'',
    })) {
        warn "[ERROR] Email `$pseudonym` creation failed.\n";
        next;
    }

    warn "[INFO] imported $email\n";

}

if($pseudonym) {
    esmith::event::event_signal('pseudonym-create', $pseudonym);
}
